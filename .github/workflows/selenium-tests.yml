name: Selenium Tests

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Cucumber tags to run (e.g., @smoke, @regression). Leave empty to run all tests.'
        required: false
        default: ''
  schedule:
    # Runs at 9:00 AM and 9:00 PM UTC every day
    - cron: '0 9,21 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run Tests
      id: test
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.tags }}" ]; then
          mvn clean test "-Dcucumber.filter.tags=${{ github.event.inputs.tags }}"
        else
          mvn clean test
        fi
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target

    - name: Generate Cucumber Report
      if: always()
      uses: deblockt/cucumber-report-annotations-action@v1.7
      with:
        access-token: ${{ secrets.GITHUB_TOKEN }}
        path: "target/cucumber-reports/CucumberTestReport.json"

    - name: Publish Test Results
      if: always()
      run: |
        # Create JSON payload with test results
        echo '{
          "metadata": {
            "workflow": "'${{ github.workflow }}'",
            "trigger": "'${{ github.event_name }}'",
            "status": "'${{ job.status }}'",
            "repository": "'${{ github.repository }}'",
            "run_id": "'${{ github.run_id }}'",
            "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'"
          },
          "test_results": '$(cat target/cucumber-reports/CucumberTestReport.json)',
          "report_url": "'${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'"
        }' > test-results.json

        # Send JSON to the specified API
        curl -X POST "https://v0-publish-json-to-webpage.vercel.app/api/post" \
          -H "Content-Type: application/json" \
          -d @test-results.json

    - name: Publish Test Results Archive
      if: always()
      run: |
        # Create a zip file of the test results
        zip -r test-results.zip target/

        # Send zip file to the API
        curl -X POST "https://v0-publish-json-to-webpage.vercel.app/api/post" \
          -H "Content-Type: application/zip" \
          --data-binary "@test-results.zip" 